;; Emacs package system
(require 'package)
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
(package-initialize)

;;language
(set-language-environment 'Japanese)
(prefer-coding-system 'utf-8)
;;(set-language-environment "UTF-8")

;; load-pathに追加
(add-to-list 'load-path "~/.emacs.d/mylisp")


;;popwin 使わなかった
;;(require 'popwin)
;;(setq display-buffer-function 'popwin:display-buffer)

;;バッファの切り替えをポップアップで行う
(require 'popup)
(require 'popup-select-window)
(define-key global-map(kbd "C-x C-o")'popup-select-window)


;; 警告音もフラッシュも全て無効(警告音が完全に鳴らなくなるので注意)
(setq ring-bell-function 'ignore)

;;backupfileを作らない ~ and ##
(setq make-backup-files nil)
(setq auto-save-default nil)

;;改行時の自動インデントを無効
(electric-indent-mode -1)


;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
;;  キーバインド
;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

;;ctrl-h
(keyboard-translate ?\C-h ?\C-?)
;;Ctrl+y
;;(define-key global-map(kbd "C-z")'undo)
(define-key global-map(kbd "C-z")'scroll-down-command)
;;(define-key global-map(kbd "\C-m")'scroll-down-command)
;;(define-key global-map(kbd "\C-c")'copy-region-as-kill)
;;(define-key global-map(kbd "C-v")'yank)

;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
;; window関連
;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

;; 対応するカッコを強調表示
(show-paren-mode t)

;; 時間を表示
(display-time)

;;行数を表示
(global-linum-mode t)

;;バッファの終端を明示
(setq-default indicate-empty-lines t)

;;選択したところをハイライト
(setq transient-mark-mode t)

;; 自動で色を付ける設定
(global-font-lock-mode t)

;;アクティブバッファの色を変える
(when (require 'hiwin nil t)
  (hiwin-activate)                            ;; hiwin-modeを有効化
  (set-face-background 'hiwin-face "gray10"))  ;; 非アクティブバッファの背景色を設定

;;カーソル行のハイライト
(defface hlline-face
  '((((class color)
      (background dark))
     (:background "dark slate gray"))
    (((class color)
      (background light))
     (:background "OliveDrab1"))
    (t
     ()))
  "*Face used by hl-line.")
(setq hl-line-face 'hlline-face)
;; (setq hl-line-face 'underline) ; 下線
(global-hl-line-mode)

;;ウインドウのアルファ化
;;(add-to-list 'default-frame-alist '(alpha . 50))

;;Window
(if window-system
    (progn
      ;; 文字の色を設定します。
;;      (add-to-list 'default-frame-alist '(foreground-color . "VioletRed1"))
      ;; 背景色を設定します。
;;      (add-to-list 'default-frame-alist '(background-color . "black"))
      ;; カーソルの色を設定します。
;;      (add-to-list 'default-frame-alist '(cursor-color . "snow"))
      ;; マウスポインタの色を設定します。
;      (add-to-list 'default-frame-alist '(mouse-color . "SlateBlue2"))
      ;; モードラインの文字の色を設定します。
;      (set-face-foreground 'modeline "white")
      ;; モードラインの背景色を設定します。
;      (set-face-background 'modeline "MediumPurple2")
      ;; 選択中のリージョンの色を設定します。
;      (set-face-background 'region "LightSteelBlue1")
      ;; モードライン（アクティブでないバッファ）の文字色を設定します。
;      (set-face-foreground 'mode-line-inactive "gray30")
      ;; モードライン（アクティブでないバッファ）の背景色を設定します。
;      (set-face-background 'mode-line-inactive "gray85")
      ))



;; 空白などの可視化
;; whitespace
;;
;;part1
;;(require 'whitespace)
;;(setq whitespace-style '(face           ; faceで可視化
;;                         trailing       ; 行末
;;                         tabs           ; タブ
;;;;                         empty          ; 先頭/末尾の空行
;;                         space-mark     ; 表示のマッピング
;;                         tab-mark
;;                         ))
;;(setq whitespace-display-mappings
;;      '((tab-mark ?\t [?\u00BB ?\t] [?\\ ?\t])))
;;(global-whitespace-mode 1)

;;part2
;;(require 'whitespace)
;see whitespace.el for more details
;;(setq whitespace-style '(face tabs tab-mark spaces space-mark))
;;(setq whitespace-display-mappings
;;      '((space-mark ?\u3000 [?\u25a1])
;;        ;; WARNING: the mapping below has a problem.
;;        ;; When a TAB occupies exactly one column, it will display the
;;        ;; character ?\xBB at that column followed by a TAB which goes to
;;        ;; the next TAB column.
;;        ;; If this is a problem for you, please, comment the line below.
;;        (tab-mark ?\t [?\xBB ?\t] [?\\ ?\t])))
;;(setq whitespace-space-regexp "\\(\u3000+\\)")
;;(set-face-foreground 'whitespace-tab "#adff2f")
;;(set-face-background 'whitespace-tab 'nil)
;;(set-face-underline  'whitespace-tab t)
;;(set-face-foreground 'whitespace-space "#7cfc00")
;;(set-face-background 'whitespace-space 'nil)
;;(set-face-bold-p 'whitespace-space t)
;;(global-whitespace-mode 1)
;;(global-set-key (kbd "C-x w") 'global-whitespace-mode)

;;part3
(require 'whitespace)
;; 空白文字を強制表示
(setq-default show-trailing-whitespace t)
(set-face-background 'trailing-whitespace "#b14770")
;; タブの色
(set-face-foreground 'whitespace-tab "DarkRed")
(set-face-underline  'whitespace-tab t)
(set-face-background 'whitespace-tab nil)

;;setting#4
;;(progn
;;  (require 'whitespace)
;;  (setq whitespace-style
;;        '(
;;          face ; faceで可視化
;;          trailing ; 行末
;;          tabs ; タブ
;;          spaces ; スペース
;;          space-mark ; 表示のマッピング
;;          tab-mark
;;          ))
;;  (setq whitespace-display-mappings
;;        '(
;;          (space-mark ?\u3000 [?\u2423])
;;          (tab-mark ?\t [?\u00BB ?\t] [?\\ ?\t])
;;          ))
;;  (setq whitespace-trailing-regexp  "\\([ \u00A0]+\\)$")
;;  (setq whitespace-space-regexp "\\(\u3000+\\)")
;;  (set-face-attribute 'whitespace-trailing nil
;;                      :foreground "RoyalBlue4"
;;                      :background "RoyalBlue4"
;;                      :underline nil)
;;  (set-face-attribute 'whitespace-tab nil
;;                      :foreground "yellow4"
;;                      :background "yellow4"
;;                      :underline nil)
;;  (set-face-attribute 'whitespace-space nil
;;                      :foreground "gray40"
;;                      :background "gray20"
;;                      :underline nil)
;;  (global-whitespace-mode t)
;;  )


;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
;; 日本語入力設定定
;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

;; (set-language-environment "UTF-8") ;; UTF-8 でも問題ないので適宜コメントアウトしてください
;;(setq default-input-method "W32-IME")
;;(setq-default w32-ime-mode-line-state-indicator "[--]")
;;(setq w32-ime-mode-line-state-indicator-list '("[--]" "[あ]" "[--]"))
;;(w32-ime-initialize)


;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
;; 各パッケージ毎の設定
;;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


;;*******************************//gtags
;; load-pathに追加
(add-to-list 'load-path "~/.emacs.d/mylisp")
(require 'gtags)
;;キーバインドの設定
;;(global-set-key "\M-t" 'gtags-find-tag)
;;(global-set-key "\M-r" 'gtags-find-rtag)
;;(global-set-key "\M-s" 'gtags-find-symbol)
;;(global-set-key "\C-t" 'gtags-pop-stack)
;;ファイル保存時にタグの更新をする
(defun my-c-mode-update-gtags ()
  (let* ((file (buffer-file-name (current-buffer)))
     (dir (directory-file-name (file-name-directory file))))
    (when (executable-find "global")
      (start-process "gtags-update" nil
             "global" "-uv"))))
(add-hook 'after-save-hook
      'my-c-mode-update-gtags)


;;*******************************//neotree
;;(add-to-list 'load-path "必要なパス指定")
(require 'neotree)
(global-set-key [f8] 'neotree-toggle)

;;editorconfig
(editorconfig-mode 1)


;;*******************************//php-mode
(require 'php-mode)
(add-to-list 'auto-mode-alist
	     '("\\.php$" . php-mode)) ;
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages (quote (popup web-mode php-mode neotree editorconfig))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
